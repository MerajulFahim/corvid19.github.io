{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","modifiedData","console","log","fetchDailyData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Charts","useState","setDailyData","useEffect","fetchApi","lineChart","length","labels","datasets","label","backgroundColor","borderColor","fill","barChart","options","lagend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","image","src","images","alt","Chart","React","Component","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.5d65a748.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__1yF_k\",\"Card\":\"Cards_Card__2sgnJ\",\"infected\":\"Cards_infected__6mUxa\",\"recovered\":\"Cards_recovered__3Eos-\",\"deaths\":\"Cards_deaths__21eHQ\"};","import React from \"react\";\r\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\r\nimport styles from \"./Cards.module.css\";\r\nimport CountUp from \"react-countup\";\r\nimport cx from 'classnames';\r\n\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n  if (!confirmed) {\r\n    return \"Loading...\";\r\n  }\r\n  return (\r\n    <div className={styles.container}>\r\n      <Grid container spacing={3} justify=\"center\">\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cx(styles.Card, styles.infected)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"primary\" gutterBottom>\r\n              Infected\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={confirmed.value}\r\n                duration={2.5}\r\n                separator=\" , \"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"primary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of active cases of COVID-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cx(styles.Card, styles.recovered)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"primary\" gutterBottom>\r\n              Recovered\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={recovered.value}\r\n                duration={2.5}\r\n                separator=\" , \"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"primary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of recoveries from COVID-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cx(styles.Card, styles.deaths)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"secondary\" gutterBottom>\r\n              Deaths\r\n            </Typography>\r\n            <CountUp\r\n              start={0}\r\n              end={deaths.value}\r\n              duration={2.5}\r\n              separator=\" , \"\r\n            />\r\n            <Typography variant=\"h5\"></Typography>\r\n            <Typography color=\"secondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of deaths caused by COVID-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import axios from 'axios';\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\n\r\nexport const fetchData=async (country)=>{\r\n\r\n    let changeableUrl=url;\r\n    if(country){\r\n        changeableUrl=`${url}/countries/${country}`;\r\n    }\r\n    try {\r\n        const {data:{confirmed,recovered,deaths,lastUpdate}}=await axios.get(changeableUrl);\r\n        const modifiedData={confirmed,recovered,deaths,lastUpdate}\r\n        return modifiedData;\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const fetchDailyData= async ()=>{\r\n    try {\r\n        const {data} =await axios.get(`${url}/daily`);\r\n        const modifiedData=data.map((dailyData)=>({\r\n            confirmed:dailyData.confirmed.total,\r\n            deaths:dailyData.deaths.total,\r\n            date:dailyData.reportDate\r\n        }))\r\n        return modifiedData;\r\n        \r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\n\r\nexport const fetchCountries=async()=>{\r\n    try {\r\n        const {data:{countries}}=await axios.get(`${url}/countries`);\r\n        return countries.map((country)=>country.name);\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n\r\n}","import React,{useState,useEffect} from 'react';\r\nimport {fetchDailyData} from '../../api/index'\r\nimport {Line,Bar} from 'react-chartjs-2';\r\nimport styles from './Chart.module.css';\r\n\r\nconst Charts = ({data:{confirmed,deaths,recovered},country}) => {\r\n\r\nconst[dailyData,setDailyData]=useState([]);\r\nuseEffect(()=>{\r\nconst fetchApi=async()=>{\r\nconst dailyData = await fetchDailyData();\r\nsetDailyData(dailyData);\r\n}\r\nfetchApi();\r\n},[]);\r\n\r\nconst lineChart=(\r\n    dailyData.length ?\r\n(<Line\r\n    data={{\r\n        labels:dailyData.map(({date})=>date),\r\n        datasets:[{\r\n            data:dailyData.map(({confirmed})=>confirmed),\r\n            label:'Infected',\r\n            backgroundColor:'rgba(0,0,125,0.3)',\r\n            borderColor:'#3333ff',\r\n            fill:true\r\n        },\r\n        {\r\n            data:dailyData.map(({deaths})=>deaths),\r\n            label:'Deaths',\r\n            borderColor:'red',\r\n            backgroundColor:'rgba(255,0,0,0.5)',\r\n            fill:true\r\n        }]\r\n    }}\r\n/>)\r\n:null)\r\n\r\nconst barChart=(\r\n    confirmed ?\r\n    (\r\n        <Bar\r\n        data={{\r\n        labels:['Infected','Recovered','Deaths'],\r\n        datasets:[{\r\n            label:'people',\r\n            backgroundColor:[\r\n                'rgba(0,0,255,0.5)',\r\n                'rgba(0,255,0,0.5)',\r\n                'rgba(255,0,0,0.5)',\r\n            ],\r\n            data:[confirmed.value,recovered.value,deaths.value]\r\n        }]\r\n        }}\r\n        options={{\r\n        lagend:{display:false},\r\n        title:{display:true,text:`Current state in ${country}`}\r\n        }}\r\n\r\n        />\r\n    ):\r\n    null\r\n);\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            {country?barChart:lineChart}\r\n        </div>\r\n    )\r\n}\r\nexport default Charts;","import React,{useState,useEffect} from 'react';\r\nimport {NativeSelect,FormControl} from '@material-ui/core';\r\nimport styles from './CountryPicker.module.css';\r\nimport { fetchCountries } from \"../../api/index\";\r\n\r\n\r\nconst CountryPicker = ({handleCountryChange}) => {\r\n\r\n    const [fetchedCountries,setFetchedCountries]=useState([]);\r\n\r\n    useEffect(()=>{\r\n        const fetchApi=async ()=>{\r\n            setFetchedCountries(await fetchCountries());\r\n        }\r\n        fetchApi();\r\n    },[setFetchedCountries]);\r\n\r\n    return (\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect defaultValue='' onChange={(e)=>{handleCountryChange(e.target.value)}}>\r\n                <option value=\"\"> Global</option>\r\n                {fetchedCountries.map((country,i)=><option key={i} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\nexport default CountryPicker;","import React from 'react';\r\nimport {Cards,Chart,CountryPicker} from './components';\r\nimport styles from './App.module.css';\r\nimport {fetchData} from './api/index';\r\nimport images from './images/image.png'\r\n\r\nclass App extends React.Component{\r\n\r\nstate={\r\n    data:{},\r\n    country:''\r\n}\r\n\r\nasync componentDidMount(){\r\n    const fetchedData=await fetchData();\r\n    this.setState({data:fetchedData});\r\n    \r\n}\r\n\r\nhandleCountryChange =async(country)=>{\r\n    const fetchedData = await fetchData(country);\r\n    this.setState({data:fetchedData,country:country});\r\n}\r\n\r\n    render(){\r\n\r\n    const{data,country}=this.state;\r\n        return(\r\n            <div className={styles.container}>\r\n            <img className={styles.image} src={images} alt=\"Covid-19\"/>\r\n                <Cards data={data}/>\r\n                <CountryPicker handleCountryChange={this.handleCountryChange}/>\r\n                <Chart data={data} country={country}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport App from './App';\r\n\r\n\r\nReactDom.render(<App/>,document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__36Ozr\",\"image\":\"App_image__DcZqO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__2u1EF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2R9cp\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}